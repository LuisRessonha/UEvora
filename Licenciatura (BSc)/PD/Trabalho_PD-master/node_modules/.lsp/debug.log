Hello - from /home/luis/.vscode/extensions/jaredly.reason-vscode-1.7.5/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","languageId":"ocaml","version":1,"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0100135803223ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 4, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":11,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.0147819519043ms
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.0381469726562ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":7,"character":51}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0221729278564ms
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
Sending response {"id": 12, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 14, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":17,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":11,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":12,"character":14},"end":{"line":13,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0350475311279ms
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":12,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0290870666504ms
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0319480895996ms
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Sending response {"id": 22, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Sending response {"id": 24, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":10,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.0147819519043ms
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":2},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
Sending response {"id": 27, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0331401824951ms
Sending response {"id": 28, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":3},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nl\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":32,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 30, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":1},"end":{"line":32,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 32, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00715255737305ms
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":4},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nle\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 34, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Sending response {"id": 36, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0209808349609ms
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":4},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nle\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":4}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":5},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00619888305664ms
Sending response {"id": 38, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":3},"end":{"line":32,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 40, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0138282775879ms
Sending response {"id": 41, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":6},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet \n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 42, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0147819519043ms
Sending response {"id": 43, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0400543212891ms
Sending response {"id": 44, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":6},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet \n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":6}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":8},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet so\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
Sending response {"id": 45, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":6},"end":{"line":32,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 46, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0171661376953ms
Sending response {"id": 47, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0410079956055ms
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":13},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nl\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Sending response {"id": 49, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":1},"end":{"line":32,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 50, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 51, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":14},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.018835067749ms
Sending response {"id": 52, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.014066696167ms
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":14},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":14}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":15},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nl\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"position":{"line":32,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.110149383545ms
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":16},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nle\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 56, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 58, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0319480895996ms
Sending response {"id": 59, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":18},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet \n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":20},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet co\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":21},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet com\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 60, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 61, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":7},"end":{"line":32,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 62, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0150203704834ms
Sending response {"id": 63, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":22},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet co\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
Sending response {"id": 64, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":6},"end":{"line":32,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 65, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Sending response {"id": 66, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0128746032715ms
Sending response {"id": 67, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":24},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0200271606445ms
Sending response {"id": 68, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":8},"end":{"line":32,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.018835067749ms
Sending response {"id": 69, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
Sending response {"id": 70, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":25},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona \n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00619888305664ms
Sending response {"id": 71, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0112056732178ms
Sending response {"id": 72, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.014066696167ms
Sending response {"id": 73, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":26},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona =\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":27},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = \n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 74, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 75, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 76, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":28},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = s\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0131130218506ms
Sending response {"id": 77, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":12},"end":{"line":32,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 78, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 79, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.014066696167ms
Sending response {"id": 80, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":28},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = s\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":28}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":29},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = so\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Sending response {"id": 81, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 82, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 83, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0300407409668ms
Sending response {"id": 84, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":29},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = so\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":29}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":30},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = sob\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Sending response {"id": 85, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 86, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
Sending response {"id": 87, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0219345092773ms
Sending response {"id": 88, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":30},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nlet cona = sob\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":30}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":42},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nle\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.02121925354ms
Sending response {"id": 89, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 90, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":43},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\nl\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00476837158203ms
Sending response {"id": 91, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 92, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"},"range":{"start":{"line":32,"character":1},"end":{"line":32,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 93, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Sending response {"id": 94, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":44},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":45},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0250339508057ms
Sending response {"id": 95, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0300407409668ms
Sending response {"id": 96, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0388622283936ms
Sending response {"id": 97, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":45},"contentChanges":[{"text":"let pista = [[[1;2;3];[4;5;6]];[[1;2];[3;4]]];;\n\n(*Devolve a lista das linhas*)\nlet lines = function \n  | [] -> []\n  | h::t -> h;;\n\nlet arr_lines = Array.of_list (lines pista);; (* Converte a lista para array *)\n\n(*Devolve a lista das colunas*)\nlet rec columns = function \n  | [] -> []\n  | h::[] -> h\n  | h::t -> columns t;;\n\nlet arr_columns = Array.of_list (columns pista);; (* Converte a lista para array *)\n\n(* Tamanho do tabuleiro *)\nlet n_lines = Array.length arr_lines;;\nlet n_columns = Array.length arr_columns;;\n\nlet rec soma_pistas = function\n  | [] -> -1\n  | h::t -> h + 1 + soma_pistas t;;\n\nlet pos = 0;;\nlet soma_lines = soma_pistas arr_lines.(pos);;\n\nlet sobre soma n_columns = \n  if soma_lines > (n_columns) then true\n  else false;;\n\n\n(*   \n\nlet sobre soma =\n  if  soma > ((size (columns pista))/2) then true\n  else false\n\n(* recebe lines ou columns *)\nlet rec jogar = function\n  | [] -> 0\n  | h::t -> sobre(soma_pistas h) ; jogar t;;\n *)\n\n\n(* \n\n let soma_line = soma_pistas lines;;\n\nlet soma_columns = soma_pistas columns;;\n\n\n\nval make_matrix : n_lines n_columns;;\nlet tab = make_matrx;; \n\n*)\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/luis/Documents/GitHub/Trabalho_PD/ocaml/main_b.ml","version":45}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"shutdown","params":null}
Sending response {"id": 98, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
